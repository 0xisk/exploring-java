package js_club.cActivities;
import js_club.dPlaces.*;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Maria
 */
public class Schedule extends javax.swing.JFrame {

    final static int counter_Sport = 20;
    /**
     * Creates new form Schedule
     */
    public Schedule() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        DefaultTableModel dtm = new DefaultTableModel();
        jTable1.setModel(dtm);
        dtm.addColumn(" Name Coach ");
        dtm.addColumn(" Sport ");
        dtm.addColumn(" Monday ");
        dtm.addColumn(" Tuesday ");
        dtm.addColumn(" Wednesday ");
        dtm.addColumn(" Thursday ");
        dtm.addColumn(" Friday ");
        dtm.addColumn(" Saturday ");
        dtm.addColumn(" Sunday ");
        
        String []l1 = {" John William"," Football"," From 11:00 \n To 01:00 Pm"," ----------------------------------- "," ----------------------------------- "," From 06:00 To 08:00 Pm"," ----------------------------------- "," From 03:00 To 05:00 Pm"," ----------------------------------- "};
        String []l2 = {" Steve Gills"," Basketball"," ----------------------------------- "," From 11:00 To 01:00 Pm"," From 09:00 To 11:00 Am"," ----------------------------------- "," --------------------"," From 02:00 To 04:00 Pm"," ----------------------------------- "};
        String []l3 = {" David James"," Vollyeball"," ----------------------------------- "," ----------------------------------- "," ----------------------------------- "," From 02:00 To 04:00 Pm"," From 03:00 To 05:00 Pm"," ----------------------------------- ","From 12:00 To 02:00 Pm"};
        String []l4 = {" Rashael Monfils"," Handball"," From 05:00 To 07:00 Pm"," ----------------------------------- "," From 11:00 To 01:00 Pm"," ----------------------------------- "," ----------------------------------- "," ----------------------------------- "," From 04:00 To 06:00 Pm"};
        String []l5 = {" Mat Stephen"," Tennis"," ----------------------------------- "," From 08:00 To 10:00 Am"," From 05:00 To 07:00 Pm"," ----------------------------------- "," ----------------------------------- "," From 11:00 To 01:00 Pm"," ----------------------------------- "};
        String []l6 = {" ann Jorden"," Squash"," ----------------------------------- "," ----------------------------------- "," ----------------------------------- "," From 11:00 To 01:00 Pm"," From 07:00 To 09:00 Pm"," From 10:00 To 12:00 Pm"," ----------------------------------- "};
        String []l7 = {" Christian Evans"," Karate"," From 11:00 To 01:00 Pm"," ----------------------------------- "," ----------------------------------- "," ----------------------------------- "," From 04:00 To 06:00 Pm"," ----------------------------------- "," ----------------------------------- "};
        String []l8 = {" Jack Factor"," Swimming"," From 04:00 To 06:00 Pm"," ----------------------------------- "," ----------------------------------- "," ----------------------------------- "," From 11:00 To 01:00 Pm"," ----------------------------------- "," From 03:00 To 05:00 Pm"};
        
        dtm.addRow(l1);
        dtm.addRow(l2);
        dtm.addRow(l3);
        dtm.addRow(l4);
        dtm.addRow(l5);
        dtm.addRow(l6);
        dtm.addRow(l7);
        dtm.addRow(l8);
        
  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        Save = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        Football = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        Basketball = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        Vollyball = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        Handball = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Tennis = new javax.swing.JComboBox<>();
        Squash = new javax.swing.JComboBox<>();
        Karate = new javax.swing.JComboBox<>();
        Swimming = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        sport = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        from = new javax.swing.JComboBox<>();
        to = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jTable1.setBackground(new java.awt.Color(0, 153, 153));
        jTable1.setForeground(new java.awt.Color(102, 0, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "null", "Title 2"
            }
        ));
        jTable1.setEnabled(false);
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 110, 1110, 153);

        jTextField1.setBackground(new java.awt.Color(153, 255, 204));
        jTextField1.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(51, 51, 51));
        jTextField1.setText("          Now Choose ");
        jTextField1.setCaretColor(new java.awt.Color(153, 255, 204));
        jTextField1.setDisabledTextColor(new java.awt.Color(0, 0, 102));
        jTextField1.setEnabled(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1);
        jTextField1.setBounds(600, 270, 227, 42);

        Save.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        Save.setForeground(new java.awt.Color(102, 0, 0));
        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        getContentPane().add(Save);
        Save.setBounds(780, 580, 101, 37);

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel2.setText("Football");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(30, 347, 61, 23);

        Football.setBackground(new java.awt.Color(204, 255, 255));
        Football.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        Football.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", " Football     Monday     From 11:00 To 01:00 Pm ", " Football     Thursday     From 06:00 To 08:00 Pm ", " Football     Saturday     From 03:00 To 05:00 Pm " }));
        Football.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FootballActionPerformed(evt);
            }
        });
        getContentPane().add(Football);
        Football.setBounds(120, 347, 344, 27);

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel1.setText("Basketball");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(30, 387, 67, 15);

        Basketball.setBackground(new java.awt.Color(204, 255, 255));
        Basketball.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        Basketball.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", " Basketball     Tuesday     From 11:00 To 01:00 Pm ", " Basketball     Wednesday     From 09:00 To 11:00 Am ", " Basketball     Saturday     From 02:00 To 04:00 Pm " }));
        Basketball.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BasketballActionPerformed(evt);
            }
        });
        getContentPane().add(Basketball);
        Basketball.setBounds(120, 387, 388, 27);

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel3.setText("Vollyeball");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(30, 427, 68, 15);

        Vollyball.setBackground(new java.awt.Color(204, 255, 255));
        Vollyball.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        Vollyball.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", " Vollyeball     Thursday     From 02:00 To 04:00 Pm ", " Vollyeball     Friday     From 03:00 To 05:00 Pm ", " Vollyeball     Sunday     From 12:00 To 02:00 Pm ", " " }));
        Vollyball.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VollyballActionPerformed(evt);
            }
        });
        getContentPane().add(Vollyball);
        Vollyball.setBounds(120, 430, 344, 27);

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel4.setText("Handball");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(33, 472, 68, 15);

        Handball.setBackground(new java.awt.Color(204, 255, 255));
        Handball.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        Handball.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", " Handball     Monday     From 05:00 To 07:00 Pm ", " Handball     Wednesday     From 11:00 To 01:00 Pm ", " Handball     Sunrday     From 04:00 To 06:00 Pm " }));
        Handball.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HandballActionPerformed(evt);
            }
        });
        getContentPane().add(Handball);
        Handball.setBounds(119, 469, 345, 27);

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel5.setText("Tennis");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(680, 350, 45, 15);

        jLabel6.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel6.setText("Squash");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(680, 390, 50, 15);

        jLabel7.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel7.setText("Karate");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(680, 440, 50, 15);

        jLabel8.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel8.setText("Swimming");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(670, 480, 65, 15);

        Tennis.setBackground(new java.awt.Color(204, 255, 255));
        Tennis.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        Tennis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", " Tennis     Tuesday     From 08:00 To 10:00 Am ", " Tennis     Wednesday     From 05:00 To 07:00 Pm ", " Tennis     Saturday     From 11:00 To 01:00 Pm " }));
        Tennis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TennisActionPerformed(evt);
            }
        });
        getContentPane().add(Tennis);
        Tennis.setBounds(760, 350, 345, 27);

        Squash.setBackground(new java.awt.Color(204, 255, 255));
        Squash.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        Squash.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", " Squash     Tursday     From 11:00 To 01:00 Pm ", " Squash     Friday     From 07:00 To 09:00 Pm ", " Squash     Saturday     From 10:00 To 12:00 Pm " }));
        Squash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SquashActionPerformed(evt);
            }
        });
        getContentPane().add(Squash);
        Squash.setBounds(760, 390, 345, 27);

        Karate.setBackground(new java.awt.Color(204, 255, 255));
        Karate.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        Karate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", " Karate     Monday     From 11:00 To 01:00 Pm ", " Karate     Friday     From 12:00 To 06:00 Pm " }));
        Karate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KarateActionPerformed(evt);
            }
        });
        getContentPane().add(Karate);
        Karate.setBounds(760, 430, 345, 27);

        Swimming.setBackground(new java.awt.Color(204, 255, 255));
        Swimming.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        Swimming.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", " Swimming     Monday     From 04:00 To 06:00 Pm ", " Swimming     Friday     From 11:00 To 01:00 Pm ", " Swimming     Sunday     From 03:00 To 05:00 Pm " }));
        Swimming.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SwimmingActionPerformed(evt);
            }
        });
        getContentPane().add(Swimming);
        Swimming.setBounds(760, 470, 345, 27);

        jLabel9.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel9.setText(" If you want add another timing  rathar than please choose ");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(310, 510, 380, 26);

        jLabel10.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel10.setText("Sport");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(180, 550, 45, 15);

        sport.setBackground(new java.awt.Color(204, 255, 255));
        sport.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        sport.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", " Football    ", " Basket ball    ", " Vollyeball    ", " Handball    ", " Tennis    ", " Squash    ", " Karate    ", " Swimming    " }));
        getContentPane().add(sport);
        sport.setBounds(240, 550, 143, 27);

        jLabel11.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel11.setText("From");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(540, 550, 40, 15);

        jLabel12.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel12.setText("To");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(760, 550, 29, 15);

        from.setBackground(new java.awt.Color(204, 255, 255));
        from.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        from.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", " From 08:00 Am    ", " From 09:00 Am    ", " From 10:00 Am    ", " From 11:00 Am    ", " From 12:00 Pm    ", " From 01:00 Pm    ", " From 02:00 Pm    ", " From 03:00 Pm    ", " From 04:00 Pm    ", " From 05:00 Pm    ", " From 06:00 Pm    ", " From 07:00 Pm    " }));
        getContentPane().add(from);
        from.setBounds(590, 550, 169, 27);

        to.setBackground(new java.awt.Color(204, 255, 255));
        to.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        to.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", " To 10:00 Am ", " To 11:00 Am ", " To 12:00 Pm ", " To 01:00 Pm ", " To 02:00 Pm ", " To 03:00 Pm ", " To 04:00 Pm ", " To 05:00 Pm ", " To 06:00 Pm ", " To 07:00 Pm ", " To 08:00 Pm ", " To 09:00 Pm " }));
        getContentPane().add(to);
        to.setBounds(800, 550, 141, 27);

        jLabel13.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel13.setText("Please Select Just Your Soprts");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(560, 320, 283, 22);

        jButton1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(102, 0, 0));
        jButton1.setText("Next");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(1010, 580, 101, 37);

        jButton2.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(102, 0, 0));
        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(890, 580, 97, 37);

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("Schedule.jpg"))); // NOI18N
        jLabel14.setText("jLabel14");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(-220, -70, 1400, 790);

        pack();
    }// </editor-fold>//GEN-END:initComponents
   public void close() { 
    this.setVisible(false);
    this.dispose(); 
     }
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed


    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
         int start = 0 ;
        final int end = 20;
        PrintWriter pw = null;
        

        try {
            int index_football = Football.getSelectedIndex();
            String football = Football.getItemAt(index_football);
            int index_basketball = Basketball.getSelectedIndex();
            String basketball = Basketball.getItemAt(index_basketball);
            int index_vollyeball = Vollyball.getSelectedIndex();
            String vollyeball = Vollyball.getItemAt(index_vollyeball);
            int index_handball = Handball.getSelectedIndex();
            String handball = Handball.getItemAt(index_handball);
            
            int index_tennis = Tennis.getSelectedIndex();
            String tennis = Tennis.getItemAt(index_tennis);
            int index_squash = Squash.getSelectedIndex();
            String squash = Squash.getItemAt(index_squash);
            int index_karate = Karate.getSelectedIndex();
            String karate = Karate.getItemAt(index_karate);
            int index_swimming = Swimming.getSelectedIndex();
            String swimming = Swimming.getItemAt(index_swimming);
            
            int index_sport = sport.getSelectedIndex();
            String Sport = sport.getItemAt(index_sport);
            int index_from = from.getSelectedIndex();
            String From = from.getItemAt(index_from);
            int index_to = to.getSelectedIndex();
            String To = to.getItemAt(index_to);
            
            String Choices = "";
            
            if (!Football.getItemAt(Football.getSelectedIndex()).equals("Select")) {
                Choices += football+"%";
            }
            
             if (!Basketball.getItemAt(Basketball.getSelectedIndex()).equals("Select")) {
                Choices += basketball+"%";
            }
             if (!Vollyball.getItemAt(Vollyball.getSelectedIndex()).equals("Select")) {
                Choices += vollyeball+"%";
            }
             if (!Handball.getItemAt(Handball.getSelectedIndex()).equals("Select")) {
                Choices += handball+"%";
            }
             if (!Tennis.getItemAt(Tennis.getSelectedIndex()).equals("Select")) {
                Choices += tennis+"%";
            }
             if (!Squash.getItemAt(Squash.getSelectedIndex()).equals("Select")) {
                Choices += squash+"%";
            }
             if (!Karate.getItemAt(Karate.getSelectedIndex()).equals("Select")) {
                Choices += karate+"%";
            }
             if (!Swimming.getItemAt(Swimming.getSelectedIndex()).equals("Select")) {
                Choices += swimming+"%";
            }
             if (!sport.getItemAt(sport.getSelectedIndex()).equals("Select")) {
                Choices += Sport;
                
            }
             if (!from.getItemAt(from.getSelectedIndex()).equals("Select")) {
                Choices += From;
            }
             if (!to.getItemAt(to.getSelectedIndex()).equals("Select")) {
                Choices += To;
            }
            
            File LogedIn = new File("Loged_in.txt");
            Scanner sc_LogedIn = new Scanner(LogedIn);
            
            String Member_Email = sc_LogedIn.nextLine();
             
            File f = new File("schedule.txt");
            Scanner sc_File = new Scanner(f);
            ArrayList<String> file_Data = new ArrayList<>();
            while(sc_File.hasNext()){
                file_Data.add(sc_File.nextLine());
            }
            pw = new PrintWriter("schedule.txt");
            file_Data.add(Member_Email+"%"+Choices );
            pw.println("");
            for (int j = 0; j < file_Data.size(); j++) {
                pw.println(file_Data.get(j));
            }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Schedule.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            pw.close(); 
        }
        
        JOptionPane.showMessageDialog(null, "Done");
    }//GEN-LAST:event_SaveActionPerformed

    private void SquashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SquashActionPerformed
        File f = new File("Number_of_Regestered_Membees.txt");
        try {
            Scanner sc = new Scanner(f);
            ArrayList<String> Lines = new ArrayList<>();
            while (sc.hasNext()) {                
                Lines.add(sc.nextLine());
            }
            String Line = "";
            String Sport_Name = "";
            String Sport_Time = "";
            int Number_Of_Regestered_Memebers;
            for(int i =0 ; i < Lines.size();i++) {                
                Line = Lines.get(i);
                String [] Parts = Line.split("@");
                Sport_Name = Parts[0];
                Sport_Time = Parts[1];
                Number_Of_Regestered_Memebers = Integer.parseInt(Parts[2]);
                
                if (Sport_Name.equals("Squash") && Sport_Time.equals(Squash.getItemAt(Squash.getSelectedIndex())) ) {
                    if (Number_Of_Regestered_Memebers <  counter_Sport) {
                        Number_Of_Regestered_Memebers++;
                        
                        Line = Sport_Name+"@"+Sport_Time+"@"+Number_Of_Regestered_Memebers;
                        Lines.set(i, Line);
                        break;
                    }
                    else
                        JOptionPane.showMessageDialog(null, "Enter Anoter Time", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            }
            
            PrintWriter pw = new PrintWriter("Number_of_Regestered_Membees.txt");
            for (int i = 0; i < Lines.size(); i++) {
                pw.println(Lines.get(i));
            }
            pw.close();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Schedule.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_SquashActionPerformed

    private void VollyballActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VollyballActionPerformed
        File f = new File("Number_of_Regestered_Membees.txt");
        try {
            Scanner sc = new Scanner(f);
            ArrayList<String> Lines = new ArrayList<>();
            while (sc.hasNext()) {                
                Lines.add(sc.nextLine());
            }
            String Line = "";
            String Sport_Name = "";
            String Sport_Time = "";
            int Number_Of_Regestered_Memebers;
            for(int i =0 ; i < Lines.size();i++) {                
                Line = Lines.get(i);
                String [] Parts = Line.split("@");
                Sport_Name = Parts[0];
                Sport_Time = Parts[1];
                Number_Of_Regestered_Memebers = Integer.parseInt(Parts[2]);
                
                if (Sport_Name.equals("Vollyball") && Sport_Time.equals(Vollyball.getItemAt(Vollyball.getSelectedIndex())) ) {
                    if (Number_Of_Regestered_Memebers <  counter_Sport) {
                        Number_Of_Regestered_Memebers++;
                        
                        Line = Sport_Name+"@"+Sport_Time+"@"+Number_Of_Regestered_Memebers;
                        Lines.set(i, Line);
                        break;
                    }
                    else
                        JOptionPane.showMessageDialog(null, "Enter Anoter Time", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            }
            
            PrintWriter pw = new PrintWriter("Number_of_Regestered_Membees.txt");
            for (int i = 0; i < Lines.size(); i++) {
                pw.println(Lines.get(i));
            }
            pw.close();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Schedule.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_VollyballActionPerformed
         
    private void FootballActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FootballActionPerformed
       
        File f = new File("Number_of_Regestered_Membees.txt");
        try {
            Scanner sc = new Scanner(f);
            ArrayList<String> Lines = new ArrayList<>();
            while (sc.hasNext()) {                
                Lines.add(sc.nextLine());
            } 
            String Line = "";
            String Sport_Name = "";
            String Sport_Time = "";
            int Number_Of_Regestered_Memebers;
            for(int i =0 ; i < Lines.size();i++) {                
                Line = Lines.get(i);
                String [] Parts = Line.split("@");
                Sport_Name = Parts[0];
                Sport_Time = Parts[1];
                Number_Of_Regestered_Memebers = Integer.parseInt(Parts[2]);
                
                if (Sport_Name.equals("Football") && Sport_Time.equals(Football.getItemAt(Football.getSelectedIndex())) ) {
                    if (Number_Of_Regestered_Memebers <  counter_Sport) {
                        Number_Of_Regestered_Memebers++;
                        
                        Line = Sport_Name+"@"+Sport_Time+"@"+Number_Of_Regestered_Memebers;
                        Lines.set(i, Line);
                        break;
                    }
                    else
                        JOptionPane.showMessageDialog(null, "Enter Anoter Time", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            }
            
            PrintWriter pw = new PrintWriter("Number_of_Regestered_Membees.txt");
            for (int i = 0; i < Lines.size(); i++) {
                pw.println(Lines.get(i));
            }
            pw.close();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Schedule.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_FootballActionPerformed

    private void BasketballActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BasketballActionPerformed
        File f = new File("Number_of_Regestered_Membees.txt");
        try {
            Scanner sc = new Scanner(f);
            ArrayList<String> Lines = new ArrayList<>();
            while (sc.hasNext()) {                
                Lines.add(sc.nextLine());
            }
            String Line = "";
            String Sport_Name = "";
            String Sport_Time = "";
            int Number_Of_Regestered_Memebers;
            for(int i =0 ; i < Lines.size();i++) {                
                Line = Lines.get(i);
                String [] Parts = Line.split("@");
                Sport_Name = Parts[0];
                Sport_Time = Parts[1];
                Number_Of_Regestered_Memebers = Integer.parseInt(Parts[2]);
                
                if (Sport_Name.equals("Basketball") && Sport_Time.equals(Basketball.getItemAt(Basketball.getSelectedIndex())) ) {
                    if (Number_Of_Regestered_Memebers <  counter_Sport) {
                        Number_Of_Regestered_Memebers++;
                        
                        Line = Sport_Name+"@"+Sport_Time+"@"+Number_Of_Regestered_Memebers;
                        Lines.set(i, Line);
                        break;
                    }
                    else
                        JOptionPane.showMessageDialog(null, "Enter Anoter Time", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            }
            
            PrintWriter pw = new PrintWriter("Number_of_Regestered_Membees.txt");
            for (int i = 0; i < Lines.size(); i++) {
                pw.println(Lines.get(i));
            }
            pw.close();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Schedule.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_BasketballActionPerformed

    private void HandballActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HandballActionPerformed
        File f = new File("Number_of_Regestered_Membees.txt");
        try {
            Scanner sc = new Scanner(f);
            ArrayList<String> Lines = new ArrayList<>();
            while (sc.hasNext()) {                
                Lines.add(sc.nextLine());
            }
            String Line = "";
            String Sport_Name = "";
            String Sport_Time = "";
            int Number_Of_Regestered_Memebers;
            for(int i =0 ; i < Lines.size();i++) {                
                Line = Lines.get(i);
                String [] Parts = Line.split("@");
                Sport_Name = Parts[0];
                Sport_Time = Parts[1];
                Number_Of_Regestered_Memebers = Integer.parseInt(Parts[2]);
                
                if (Sport_Name.equals("Handball") && Sport_Time.equals(Handball.getItemAt(Handball.getSelectedIndex())) ) {
                    if (Number_Of_Regestered_Memebers <  counter_Sport) {
                        Number_Of_Regestered_Memebers++;
                        
                        Line = Sport_Name+"@"+Sport_Time+"@"+Number_Of_Regestered_Memebers;
                        Lines.set(i, Line);
                        break;
                    }
                    else
                        JOptionPane.showMessageDialog(null, "Enter Anoter Time", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            }
            
            PrintWriter pw = new PrintWriter("Number_of_Regestered_Membees.txt");
            for (int i = 0; i < Lines.size(); i++) {
                pw.println(Lines.get(i));
            }
            pw.close();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Schedule.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_HandballActionPerformed

    private void TennisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TennisActionPerformed
        File f = new File("Number_of_Regestered_Membees.txt");
        try {
            Scanner sc = new Scanner(f);
            ArrayList<String> Lines = new ArrayList<>();
            while (sc.hasNext()) {                
                Lines.add(sc.nextLine());
            }
            String Line = "";
            String Sport_Name = "";
            String Sport_Time = "";
            int Number_Of_Regestered_Memebers;
            for(int i =0 ; i < Lines.size();i++) {                
                Line = Lines.get(i);
                String [] Parts = Line.split("@");
                Sport_Name = Parts[0];
                Sport_Time = Parts[1];
                Number_Of_Regestered_Memebers = Integer.parseInt(Parts[2]);
                
                if (Sport_Name.equals("Tennis") && Sport_Time.equals(Tennis.getItemAt(Tennis.getSelectedIndex())) ) {
                    if (Number_Of_Regestered_Memebers <  counter_Sport) {
                        Number_Of_Regestered_Memebers++;
                        
                        Line = Sport_Name+"@"+Sport_Time+"@"+Number_Of_Regestered_Memebers;
                        Lines.set(i, Line);
                        break;
                    }
                    else
                        JOptionPane.showMessageDialog(null, "Enter Anoter Time", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            }
            
            PrintWriter pw = new PrintWriter("Number_of_Regestered_Membees.txt");
            for (int i = 0; i < Lines.size(); i++) {
                pw.println(Lines.get(i));
            }
            pw.close();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Schedule.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_TennisActionPerformed

    private void KarateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KarateActionPerformed
        File f = new File("Number_of_Regestered_Membees.txt");
        try {
            Scanner sc = new Scanner(f);
            ArrayList<String> Lines = new ArrayList<>();
            while (sc.hasNext()) {                
                Lines.add(sc.nextLine());
            }
            String Line = "";
            String Sport_Name = "";
            String Sport_Time = "";
            int Number_Of_Regestered_Memebers;
            for(int i =0 ; i < Lines.size();i++) {                
                Line = Lines.get(i);
                String [] Parts = Line.split("@");
                Sport_Name = Parts[0];
                Sport_Time = Parts[1];
                Number_Of_Regestered_Memebers = Integer.parseInt(Parts[2]);
                
                if (Sport_Name.equals("Karate") && Sport_Time.equals(Karate.getItemAt(Karate.getSelectedIndex())) ) {
                    if (Number_Of_Regestered_Memebers <  counter_Sport) {
                        Number_Of_Regestered_Memebers++;
                        
                        Line = Sport_Name+"@"+Sport_Time+"@"+Number_Of_Regestered_Memebers;
                        Lines.set(i, Line);
                        break;
                    }
                    else
                        JOptionPane.showMessageDialog(null, "Enter Anoter Time", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            }
            
            PrintWriter pw = new PrintWriter("Number_of_Regestered_Membees.txt");
            for (int i = 0; i < Lines.size(); i++) {
                pw.println(Lines.get(i));
            }
            pw.close();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Schedule.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_KarateActionPerformed

    private void SwimmingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SwimmingActionPerformed
        File f = new File("Number_of_Regestered_Membees.txt");
        try {
            Scanner sc = new Scanner(f);
            ArrayList<String> Lines = new ArrayList<>();
            while (sc.hasNext()) {                
                Lines.add(sc.nextLine());
            }
            String Line = "";
            String Sport_Name = "";
            String Sport_Time = "";
            int Number_Of_Regestered_Memebers;
            for(int i =0 ; i < Lines.size();i++) {                
                Line = Lines.get(i);
                String [] Parts = Line.split("@");
                Sport_Name = Parts[0];
                Sport_Time = Parts[1];
                Number_Of_Regestered_Memebers = Integer.parseInt(Parts[2]);
                
                if (Sport_Name.equals("Swimming") && Sport_Time.equals(Swimming.getItemAt(Swimming.getSelectedIndex())) ) {
                    if (Number_Of_Regestered_Memebers <  counter_Sport) {
                        Number_Of_Regestered_Memebers++;
                        
                        Line = Sport_Name+"@"+Sport_Time+"@"+Number_Of_Regestered_Memebers;
                        Lines.set(i, Line);
                        break;
                    }
                    else
                        JOptionPane.showMessageDialog(null, "Enter Anoter Time", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            }
            
            PrintWriter pw = new PrintWriter("Number_of_Regestered_Membees.txt");
            for (int i = 0; i < Lines.size(); i++) {
                pw.println(Lines.get(i));
            }
            pw.close();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Schedule.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_SwimmingActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed


        Place g = new Place();
        g.setSize(620, 440);
        g.setLocationRelativeTo(null);
        g.setResizable(false);
        g.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        close();
        Gmes g = new Gmes();
        g.setSize(620, 440);
        g.setLocationRelativeTo(null);
        g.setResizable(false);
        g.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Schedule().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Basketball;
    private javax.swing.JComboBox<String> Football;
    private javax.swing.JComboBox<String> Handball;
    private javax.swing.JComboBox<String> Karate;
    private javax.swing.JButton Save;
    private javax.swing.JComboBox<String> Squash;
    private javax.swing.JComboBox<String> Swimming;
    private javax.swing.JComboBox<String> Tennis;
    private javax.swing.JComboBox<String> Vollyball;
    private javax.swing.JComboBox<String> from;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JComboBox<String> sport;
    private javax.swing.JComboBox<String> to;
    // End of variables declaration//GEN-END:variables
}
